/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PagerdutyServiceObjectInitParameters struct {

	// (String, Sensitive) Your Service name associated service key in PagerDuty.
	// Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration [documentation](https://www.pagerduty.io/providers/PagerDuty/pagerduty/latest/docs/resources/service_integration#integration_key) Note: Since the Datadog API never returns service keys, it is impossible to detect [drifts](https://www.hashicorp.io/docs/commands/taint.html) to have it destroyed and recreated.
	ServiceKeySecretRef v1.SecretKeySelector `json:"serviceKeySecretRef" tf:"-"`

	// (String) Your Service name in PagerDuty.
	// Your Service name in PagerDuty.
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name,omitempty"`
}

type PagerdutyServiceObjectObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Your Service name in PagerDuty.
	// Your Service name in PagerDuty.
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name,omitempty"`
}

type PagerdutyServiceObjectParameters struct {

	// (String, Sensitive) Your Service name associated service key in PagerDuty.
	// Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration [documentation](https://www.pagerduty.io/providers/PagerDuty/pagerduty/latest/docs/resources/service_integration#integration_key) Note: Since the Datadog API never returns service keys, it is impossible to detect [drifts](https://www.hashicorp.io/docs/commands/taint.html) to have it destroyed and recreated.
	// +kubebuilder:validation:Optional
	ServiceKeySecretRef v1.SecretKeySelector `json:"serviceKeySecretRef" tf:"-"`

	// (String) Your Service name in PagerDuty.
	// Your Service name in PagerDuty.
	// +kubebuilder:validation:Optional
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name,omitempty"`
}

// PagerdutyServiceObjectSpec defines the desired state of PagerdutyServiceObject
type PagerdutyServiceObjectSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PagerdutyServiceObjectParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PagerdutyServiceObjectInitParameters `json:"initProvider,omitempty"`
}

// PagerdutyServiceObjectStatus defines the observed state of PagerdutyServiceObject.
type PagerdutyServiceObjectStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PagerdutyServiceObjectObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PagerdutyServiceObject is the Schema for the PagerdutyServiceObjects API. Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated in the Datadog UI in order for this resource to be usable.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,datadog}
type PagerdutyServiceObject struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceKeySecretRef)",message="spec.forProvider.serviceKeySecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceName) || (has(self.initProvider) && has(self.initProvider.serviceName))",message="spec.forProvider.serviceName is a required parameter"
	Spec   PagerdutyServiceObjectSpec   `json:"spec"`
	Status PagerdutyServiceObjectStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PagerdutyServiceObjectList contains a list of PagerdutyServiceObjects
type PagerdutyServiceObjectList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PagerdutyServiceObject `json:"items"`
}

// Repository type metadata.
var (
	PagerdutyServiceObject_Kind             = "PagerdutyServiceObject"
	PagerdutyServiceObject_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PagerdutyServiceObject_Kind}.String()
	PagerdutyServiceObject_KindAPIVersion   = PagerdutyServiceObject_Kind + "." + CRDGroupVersion.String()
	PagerdutyServiceObject_GroupVersionKind = CRDGroupVersion.WithKind(PagerdutyServiceObject_Kind)
)

func init() {
	SchemeBuilder.Register(&PagerdutyServiceObject{}, &PagerdutyServiceObjectList{})
}
