// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PagerdutyInitParameters struct {

	// (List of String) Array of your schedule URLs.
	// Array of your schedule URLs.
	Schedules []*string `json:"schedules,omitempty" tf:"schedules,omitempty"`

	// (String) Your PagerDuty account’s personalized subdomain name.
	// Your PagerDuty account’s personalized subdomain name.
	Subdomain *string `json:"subdomain,omitempty" tf:"subdomain,omitempty"`
}

type PagerdutyObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (List of String) Array of your schedule URLs.
	// Array of your schedule URLs.
	Schedules []*string `json:"schedules,omitempty" tf:"schedules,omitempty"`

	// (String) Your PagerDuty account’s personalized subdomain name.
	// Your PagerDuty account’s personalized subdomain name.
	Subdomain *string `json:"subdomain,omitempty" tf:"subdomain,omitempty"`
}

type PagerdutyParameters struct {

	// (String, Sensitive) Your PagerDuty API token.
	// Your PagerDuty API token.
	// +kubebuilder:validation:Optional
	APITokenSecretRef *v1.SecretKeySelector `json:"apiTokenSecretRef,omitempty" tf:"-"`

	// (List of String) Array of your schedule URLs.
	// Array of your schedule URLs.
	// +kubebuilder:validation:Optional
	Schedules []*string `json:"schedules,omitempty" tf:"schedules,omitempty"`

	// (String) Your PagerDuty account’s personalized subdomain name.
	// Your PagerDuty account’s personalized subdomain name.
	// +kubebuilder:validation:Optional
	Subdomain *string `json:"subdomain,omitempty" tf:"subdomain,omitempty"`
}

// PagerdutySpec defines the desired state of Pagerduty
type PagerdutySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PagerdutyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PagerdutyInitParameters `json:"initProvider,omitempty"`
}

// PagerdutyStatus defines the observed state of Pagerduty.
type PagerdutyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PagerdutyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Pagerduty is the Schema for the Pagerdutys API. Provides a Datadog - PagerDuty resource. This can be used to create and manage Datadog - PagerDuty integration. See also PagerDuty Integration Guide https://www.pagerduty.com/docs/guides/datadog-integration-guide/.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,datadog}
type Pagerduty struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subdomain) || (has(self.initProvider) && has(self.initProvider.subdomain))",message="spec.forProvider.subdomain is a required parameter"
	Spec   PagerdutySpec   `json:"spec"`
	Status PagerdutyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PagerdutyList contains a list of Pagerdutys
type PagerdutyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Pagerduty `json:"items"`
}

// Repository type metadata.
var (
	Pagerduty_Kind             = "Pagerduty"
	Pagerduty_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Pagerduty_Kind}.String()
	Pagerduty_KindAPIVersion   = Pagerduty_Kind + "." + CRDGroupVersion.String()
	Pagerduty_GroupVersionKind = CRDGroupVersion.WithKind(Pagerduty_Kind)
)

func init() {
	SchemeBuilder.Register(&Pagerduty{}, &PagerdutyList{})
}
