//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Archive) DeepCopyInto(out *Archive) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Archive.
func (in *Archive) DeepCopy() *Archive {
	if in == nil {
		return nil
	}
	out := new(Archive)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Archive) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveInitParameters) DeepCopyInto(out *ArchiveInitParameters) {
	*out = *in
	if in.AzureArchive != nil {
		in, out := &in.AzureArchive, &out.AzureArchive
		*out = make([]AzureArchiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsArchive != nil {
		in, out := &in.GcsArchive, &out.GcsArchive
		*out = make([]GcsArchiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludeTags != nil {
		in, out := &in.IncludeTags, &out.IncludeTags
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RehydrationMaxScanSizeInGb != nil {
		in, out := &in.RehydrationMaxScanSizeInGb, &out.RehydrationMaxScanSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.RehydrationTags != nil {
		in, out := &in.RehydrationTags, &out.RehydrationTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.S3Archive != nil {
		in, out := &in.S3Archive, &out.S3Archive
		*out = make([]S3ArchiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveInitParameters.
func (in *ArchiveInitParameters) DeepCopy() *ArchiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArchiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveList) DeepCopyInto(out *ArchiveList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Archive, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveList.
func (in *ArchiveList) DeepCopy() *ArchiveList {
	if in == nil {
		return nil
	}
	out := new(ArchiveList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArchiveList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveObservation) DeepCopyInto(out *ArchiveObservation) {
	*out = *in
	if in.AzureArchive != nil {
		in, out := &in.AzureArchive, &out.AzureArchive
		*out = make([]AzureArchiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsArchive != nil {
		in, out := &in.GcsArchive, &out.GcsArchive
		*out = make([]GcsArchiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeTags != nil {
		in, out := &in.IncludeTags, &out.IncludeTags
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RehydrationMaxScanSizeInGb != nil {
		in, out := &in.RehydrationMaxScanSizeInGb, &out.RehydrationMaxScanSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.RehydrationTags != nil {
		in, out := &in.RehydrationTags, &out.RehydrationTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.S3Archive != nil {
		in, out := &in.S3Archive, &out.S3Archive
		*out = make([]S3ArchiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveObservation.
func (in *ArchiveObservation) DeepCopy() *ArchiveObservation {
	if in == nil {
		return nil
	}
	out := new(ArchiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveOrder) DeepCopyInto(out *ArchiveOrder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveOrder.
func (in *ArchiveOrder) DeepCopy() *ArchiveOrder {
	if in == nil {
		return nil
	}
	out := new(ArchiveOrder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArchiveOrder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveOrderInitParameters) DeepCopyInto(out *ArchiveOrderInitParameters) {
	*out = *in
	if in.ArchiveIds != nil {
		in, out := &in.ArchiveIds, &out.ArchiveIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveOrderInitParameters.
func (in *ArchiveOrderInitParameters) DeepCopy() *ArchiveOrderInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArchiveOrderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveOrderList) DeepCopyInto(out *ArchiveOrderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArchiveOrder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveOrderList.
func (in *ArchiveOrderList) DeepCopy() *ArchiveOrderList {
	if in == nil {
		return nil
	}
	out := new(ArchiveOrderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArchiveOrderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveOrderObservation) DeepCopyInto(out *ArchiveOrderObservation) {
	*out = *in
	if in.ArchiveIds != nil {
		in, out := &in.ArchiveIds, &out.ArchiveIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveOrderObservation.
func (in *ArchiveOrderObservation) DeepCopy() *ArchiveOrderObservation {
	if in == nil {
		return nil
	}
	out := new(ArchiveOrderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveOrderParameters) DeepCopyInto(out *ArchiveOrderParameters) {
	*out = *in
	if in.ArchiveIds != nil {
		in, out := &in.ArchiveIds, &out.ArchiveIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveOrderParameters.
func (in *ArchiveOrderParameters) DeepCopy() *ArchiveOrderParameters {
	if in == nil {
		return nil
	}
	out := new(ArchiveOrderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveOrderSpec) DeepCopyInto(out *ArchiveOrderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveOrderSpec.
func (in *ArchiveOrderSpec) DeepCopy() *ArchiveOrderSpec {
	if in == nil {
		return nil
	}
	out := new(ArchiveOrderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveOrderStatus) DeepCopyInto(out *ArchiveOrderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveOrderStatus.
func (in *ArchiveOrderStatus) DeepCopy() *ArchiveOrderStatus {
	if in == nil {
		return nil
	}
	out := new(ArchiveOrderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveParameters) DeepCopyInto(out *ArchiveParameters) {
	*out = *in
	if in.AzureArchive != nil {
		in, out := &in.AzureArchive, &out.AzureArchive
		*out = make([]AzureArchiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsArchive != nil {
		in, out := &in.GcsArchive, &out.GcsArchive
		*out = make([]GcsArchiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludeTags != nil {
		in, out := &in.IncludeTags, &out.IncludeTags
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RehydrationMaxScanSizeInGb != nil {
		in, out := &in.RehydrationMaxScanSizeInGb, &out.RehydrationMaxScanSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.RehydrationTags != nil {
		in, out := &in.RehydrationTags, &out.RehydrationTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.S3Archive != nil {
		in, out := &in.S3Archive, &out.S3Archive
		*out = make([]S3ArchiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveParameters.
func (in *ArchiveParameters) DeepCopy() *ArchiveParameters {
	if in == nil {
		return nil
	}
	out := new(ArchiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveSpec) DeepCopyInto(out *ArchiveSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveSpec.
func (in *ArchiveSpec) DeepCopy() *ArchiveSpec {
	if in == nil {
		return nil
	}
	out := new(ArchiveSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveStatus) DeepCopyInto(out *ArchiveStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveStatus.
func (in *ArchiveStatus) DeepCopy() *ArchiveStatus {
	if in == nil {
		return nil
	}
	out := new(ArchiveStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArithmeticProcessorInitParameters) DeepCopyInto(out *ArithmeticProcessorInitParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArithmeticProcessorInitParameters.
func (in *ArithmeticProcessorInitParameters) DeepCopy() *ArithmeticProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArithmeticProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArithmeticProcessorObservation) DeepCopyInto(out *ArithmeticProcessorObservation) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArithmeticProcessorObservation.
func (in *ArithmeticProcessorObservation) DeepCopy() *ArithmeticProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ArithmeticProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArithmeticProcessorParameters) DeepCopyInto(out *ArithmeticProcessorParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArithmeticProcessorParameters.
func (in *ArithmeticProcessorParameters) DeepCopy() *ArithmeticProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ArithmeticProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeRemapperInitParameters) DeepCopyInto(out *AttributeRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideOnConflict != nil {
		in, out := &in.OverrideOnConflict, &out.OverrideOnConflict
		*out = new(bool)
		**out = **in
	}
	if in.PreserveSource != nil {
		in, out := &in.PreserveSource, &out.PreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetFormat != nil {
		in, out := &in.TargetFormat, &out.TargetFormat
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeRemapperInitParameters.
func (in *AttributeRemapperInitParameters) DeepCopy() *AttributeRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttributeRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeRemapperObservation) DeepCopyInto(out *AttributeRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideOnConflict != nil {
		in, out := &in.OverrideOnConflict, &out.OverrideOnConflict
		*out = new(bool)
		**out = **in
	}
	if in.PreserveSource != nil {
		in, out := &in.PreserveSource, &out.PreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetFormat != nil {
		in, out := &in.TargetFormat, &out.TargetFormat
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeRemapperObservation.
func (in *AttributeRemapperObservation) DeepCopy() *AttributeRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(AttributeRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeRemapperParameters) DeepCopyInto(out *AttributeRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideOnConflict != nil {
		in, out := &in.OverrideOnConflict, &out.OverrideOnConflict
		*out = new(bool)
		**out = **in
	}
	if in.PreserveSource != nil {
		in, out := &in.PreserveSource, &out.PreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetFormat != nil {
		in, out := &in.TargetFormat, &out.TargetFormat
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeRemapperParameters.
func (in *AttributeRemapperParameters) DeepCopy() *AttributeRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(AttributeRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureArchiveInitParameters) DeepCopyInto(out *AzureArchiveInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureArchiveInitParameters.
func (in *AzureArchiveInitParameters) DeepCopy() *AzureArchiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureArchiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureArchiveObservation) DeepCopyInto(out *AzureArchiveObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureArchiveObservation.
func (in *AzureArchiveObservation) DeepCopy() *AzureArchiveObservation {
	if in == nil {
		return nil
	}
	out := new(AzureArchiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureArchiveParameters) DeepCopyInto(out *AzureArchiveParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StorageAccount != nil {
		in, out := &in.StorageAccount, &out.StorageAccount
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureArchiveParameters.
func (in *AzureArchiveParameters) DeepCopy() *AzureArchiveParameters {
	if in == nil {
		return nil
	}
	out := new(AzureArchiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryFilterInitParameters) DeepCopyInto(out *CategoryFilterInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryFilterInitParameters.
func (in *CategoryFilterInitParameters) DeepCopy() *CategoryFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryFilterObservation) DeepCopyInto(out *CategoryFilterObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryFilterObservation.
func (in *CategoryFilterObservation) DeepCopy() *CategoryFilterObservation {
	if in == nil {
		return nil
	}
	out := new(CategoryFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryFilterParameters) DeepCopyInto(out *CategoryFilterParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryFilterParameters.
func (in *CategoryFilterParameters) DeepCopy() *CategoryFilterParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryInitParameters) DeepCopyInto(out *CategoryInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]CategoryFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryInitParameters.
func (in *CategoryInitParameters) DeepCopy() *CategoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryObservation) DeepCopyInto(out *CategoryObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]CategoryFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryObservation.
func (in *CategoryObservation) DeepCopy() *CategoryObservation {
	if in == nil {
		return nil
	}
	out := new(CategoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryParameters) DeepCopyInto(out *CategoryParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]CategoryFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryParameters.
func (in *CategoryParameters) DeepCopy() *CategoryParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorCategoryFilterInitParameters) DeepCopyInto(out *CategoryProcessorCategoryFilterInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorCategoryFilterInitParameters.
func (in *CategoryProcessorCategoryFilterInitParameters) DeepCopy() *CategoryProcessorCategoryFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorCategoryFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorCategoryFilterObservation) DeepCopyInto(out *CategoryProcessorCategoryFilterObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorCategoryFilterObservation.
func (in *CategoryProcessorCategoryFilterObservation) DeepCopy() *CategoryProcessorCategoryFilterObservation {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorCategoryFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorCategoryFilterParameters) DeepCopyInto(out *CategoryProcessorCategoryFilterParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorCategoryFilterParameters.
func (in *CategoryProcessorCategoryFilterParameters) DeepCopy() *CategoryProcessorCategoryFilterParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorCategoryFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorCategoryInitParameters) DeepCopyInto(out *CategoryProcessorCategoryInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]CategoryProcessorCategoryFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorCategoryInitParameters.
func (in *CategoryProcessorCategoryInitParameters) DeepCopy() *CategoryProcessorCategoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorCategoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorCategoryObservation) DeepCopyInto(out *CategoryProcessorCategoryObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]CategoryProcessorCategoryFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorCategoryObservation.
func (in *CategoryProcessorCategoryObservation) DeepCopy() *CategoryProcessorCategoryObservation {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorCategoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorCategoryParameters) DeepCopyInto(out *CategoryProcessorCategoryParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]CategoryProcessorCategoryFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorCategoryParameters.
func (in *CategoryProcessorCategoryParameters) DeepCopy() *CategoryProcessorCategoryParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorCategoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorInitParameters) DeepCopyInto(out *CategoryProcessorInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = make([]CategoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorInitParameters.
func (in *CategoryProcessorInitParameters) DeepCopy() *CategoryProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorObservation) DeepCopyInto(out *CategoryProcessorObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = make([]CategoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorObservation.
func (in *CategoryProcessorObservation) DeepCopy() *CategoryProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryProcessorParameters) DeepCopyInto(out *CategoryProcessorParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = make([]CategoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryProcessorParameters.
func (in *CategoryProcessorParameters) DeepCopy() *CategoryProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(CategoryProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeInitParameters) DeepCopyInto(out *ComputeInitParameters) {
	*out = *in
	if in.AggregationType != nil {
		in, out := &in.AggregationType, &out.AggregationType
		*out = new(string)
		**out = **in
	}
	if in.IncludePercentiles != nil {
		in, out := &in.IncludePercentiles, &out.IncludePercentiles
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeInitParameters.
func (in *ComputeInitParameters) DeepCopy() *ComputeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeObservation) DeepCopyInto(out *ComputeObservation) {
	*out = *in
	if in.AggregationType != nil {
		in, out := &in.AggregationType, &out.AggregationType
		*out = new(string)
		**out = **in
	}
	if in.IncludePercentiles != nil {
		in, out := &in.IncludePercentiles, &out.IncludePercentiles
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeObservation.
func (in *ComputeObservation) DeepCopy() *ComputeObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeParameters) DeepCopyInto(out *ComputeParameters) {
	*out = *in
	if in.AggregationType != nil {
		in, out := &in.AggregationType, &out.AggregationType
		*out = new(string)
		**out = **in
	}
	if in.IncludePercentiles != nil {
		in, out := &in.IncludePercentiles, &out.IncludePercentiles
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeParameters.
func (in *ComputeParameters) DeepCopy() *ComputeParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPipeline) DeepCopyInto(out *CustomPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPipeline.
func (in *CustomPipeline) DeepCopy() *CustomPipeline {
	if in == nil {
		return nil
	}
	out := new(CustomPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPipelineInitParameters) DeepCopyInto(out *CustomPipelineInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Processor != nil {
		in, out := &in.Processor, &out.Processor
		*out = make([]ProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPipelineInitParameters.
func (in *CustomPipelineInitParameters) DeepCopy() *CustomPipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPipelineList) DeepCopyInto(out *CustomPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPipelineList.
func (in *CustomPipelineList) DeepCopy() *CustomPipelineList {
	if in == nil {
		return nil
	}
	out := new(CustomPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPipelineObservation) DeepCopyInto(out *CustomPipelineObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Processor != nil {
		in, out := &in.Processor, &out.Processor
		*out = make([]ProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPipelineObservation.
func (in *CustomPipelineObservation) DeepCopy() *CustomPipelineObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPipelineParameters) DeepCopyInto(out *CustomPipelineParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Processor != nil {
		in, out := &in.Processor, &out.Processor
		*out = make([]ProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPipelineParameters.
func (in *CustomPipelineParameters) DeepCopy() *CustomPipelineParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPipelineSpec) DeepCopyInto(out *CustomPipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPipelineSpec.
func (in *CustomPipelineSpec) DeepCopy() *CustomPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(CustomPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPipelineStatus) DeepCopyInto(out *CustomPipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPipelineStatus.
func (in *CustomPipelineStatus) DeepCopy() *CustomPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(CustomPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyLimitResetInitParameters) DeepCopyInto(out *DailyLimitResetInitParameters) {
	*out = *in
	if in.ResetTime != nil {
		in, out := &in.ResetTime, &out.ResetTime
		*out = new(string)
		**out = **in
	}
	if in.ResetUtcOffset != nil {
		in, out := &in.ResetUtcOffset, &out.ResetUtcOffset
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyLimitResetInitParameters.
func (in *DailyLimitResetInitParameters) DeepCopy() *DailyLimitResetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DailyLimitResetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyLimitResetObservation) DeepCopyInto(out *DailyLimitResetObservation) {
	*out = *in
	if in.ResetTime != nil {
		in, out := &in.ResetTime, &out.ResetTime
		*out = new(string)
		**out = **in
	}
	if in.ResetUtcOffset != nil {
		in, out := &in.ResetUtcOffset, &out.ResetUtcOffset
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyLimitResetObservation.
func (in *DailyLimitResetObservation) DeepCopy() *DailyLimitResetObservation {
	if in == nil {
		return nil
	}
	out := new(DailyLimitResetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyLimitResetParameters) DeepCopyInto(out *DailyLimitResetParameters) {
	*out = *in
	if in.ResetTime != nil {
		in, out := &in.ResetTime, &out.ResetTime
		*out = new(string)
		**out = **in
	}
	if in.ResetUtcOffset != nil {
		in, out := &in.ResetUtcOffset, &out.ResetUtcOffset
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyLimitResetParameters.
func (in *DailyLimitResetParameters) DeepCopy() *DailyLimitResetParameters {
	if in == nil {
		return nil
	}
	out := new(DailyLimitResetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRemapperInitParameters) DeepCopyInto(out *DateRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRemapperInitParameters.
func (in *DateRemapperInitParameters) DeepCopy() *DateRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(DateRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRemapperObservation) DeepCopyInto(out *DateRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRemapperObservation.
func (in *DateRemapperObservation) DeepCopy() *DateRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(DateRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateRemapperParameters) DeepCopyInto(out *DateRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateRemapperParameters.
func (in *DateRemapperParameters) DeepCopy() *DateRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(DateRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterFilterInitParameters) DeepCopyInto(out *ExclusionFilterFilterInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterFilterInitParameters.
func (in *ExclusionFilterFilterInitParameters) DeepCopy() *ExclusionFilterFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterFilterObservation) DeepCopyInto(out *ExclusionFilterFilterObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterFilterObservation.
func (in *ExclusionFilterFilterObservation) DeepCopy() *ExclusionFilterFilterObservation {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterFilterParameters) DeepCopyInto(out *ExclusionFilterFilterParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterFilterParameters.
func (in *ExclusionFilterFilterParameters) DeepCopy() *ExclusionFilterFilterParameters {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterInitParameters) DeepCopyInto(out *ExclusionFilterInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]ExclusionFilterFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterInitParameters.
func (in *ExclusionFilterInitParameters) DeepCopy() *ExclusionFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterObservation) DeepCopyInto(out *ExclusionFilterObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]ExclusionFilterFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterObservation.
func (in *ExclusionFilterObservation) DeepCopy() *ExclusionFilterObservation {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExclusionFilterParameters) DeepCopyInto(out *ExclusionFilterParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]ExclusionFilterFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExclusionFilterParameters.
func (in *ExclusionFilterParameters) DeepCopy() *ExclusionFilterParameters {
	if in == nil {
		return nil
	}
	out := new(ExclusionFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsArchiveInitParameters) DeepCopyInto(out *GcsArchiveInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ClientEmail != nil {
		in, out := &in.ClientEmail, &out.ClientEmail
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsArchiveInitParameters.
func (in *GcsArchiveInitParameters) DeepCopy() *GcsArchiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsArchiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsArchiveObservation) DeepCopyInto(out *GcsArchiveObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ClientEmail != nil {
		in, out := &in.ClientEmail, &out.ClientEmail
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsArchiveObservation.
func (in *GcsArchiveObservation) DeepCopy() *GcsArchiveObservation {
	if in == nil {
		return nil
	}
	out := new(GcsArchiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsArchiveParameters) DeepCopyInto(out *GcsArchiveParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ClientEmail != nil {
		in, out := &in.ClientEmail, &out.ClientEmail
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsArchiveParameters.
func (in *GcsArchiveParameters) DeepCopy() *GcsArchiveParameters {
	if in == nil {
		return nil
	}
	out := new(GcsArchiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoIPParserInitParameters) DeepCopyInto(out *GeoIPParserInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoIPParserInitParameters.
func (in *GeoIPParserInitParameters) DeepCopy() *GeoIPParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(GeoIPParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoIPParserObservation) DeepCopyInto(out *GeoIPParserObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoIPParserObservation.
func (in *GeoIPParserObservation) DeepCopy() *GeoIPParserObservation {
	if in == nil {
		return nil
	}
	out := new(GeoIPParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoIPParserParameters) DeepCopyInto(out *GeoIPParserParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoIPParserParameters.
func (in *GeoIPParserParameters) DeepCopy() *GeoIPParserParameters {
	if in == nil {
		return nil
	}
	out := new(GeoIPParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokInitParameters) DeepCopyInto(out *GrokInitParameters) {
	*out = *in
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.SupportRules != nil {
		in, out := &in.SupportRules, &out.SupportRules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokInitParameters.
func (in *GrokInitParameters) DeepCopy() *GrokInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrokInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokObservation) DeepCopyInto(out *GrokObservation) {
	*out = *in
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.SupportRules != nil {
		in, out := &in.SupportRules, &out.SupportRules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokObservation.
func (in *GrokObservation) DeepCopy() *GrokObservation {
	if in == nil {
		return nil
	}
	out := new(GrokObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokParameters) DeepCopyInto(out *GrokParameters) {
	*out = *in
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.SupportRules != nil {
		in, out := &in.SupportRules, &out.SupportRules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokParameters.
func (in *GrokParameters) DeepCopy() *GrokParameters {
	if in == nil {
		return nil
	}
	out := new(GrokParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokParserGrokInitParameters) DeepCopyInto(out *GrokParserGrokInitParameters) {
	*out = *in
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.SupportRules != nil {
		in, out := &in.SupportRules, &out.SupportRules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokParserGrokInitParameters.
func (in *GrokParserGrokInitParameters) DeepCopy() *GrokParserGrokInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrokParserGrokInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokParserGrokObservation) DeepCopyInto(out *GrokParserGrokObservation) {
	*out = *in
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.SupportRules != nil {
		in, out := &in.SupportRules, &out.SupportRules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokParserGrokObservation.
func (in *GrokParserGrokObservation) DeepCopy() *GrokParserGrokObservation {
	if in == nil {
		return nil
	}
	out := new(GrokParserGrokObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokParserGrokParameters) DeepCopyInto(out *GrokParserGrokParameters) {
	*out = *in
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.SupportRules != nil {
		in, out := &in.SupportRules, &out.SupportRules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokParserGrokParameters.
func (in *GrokParserGrokParameters) DeepCopy() *GrokParserGrokParameters {
	if in == nil {
		return nil
	}
	out := new(GrokParserGrokParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokParserInitParameters) DeepCopyInto(out *GrokParserInitParameters) {
	*out = *in
	if in.Grok != nil {
		in, out := &in.Grok, &out.Grok
		*out = make([]GrokInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Samples != nil {
		in, out := &in.Samples, &out.Samples
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokParserInitParameters.
func (in *GrokParserInitParameters) DeepCopy() *GrokParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(GrokParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokParserObservation) DeepCopyInto(out *GrokParserObservation) {
	*out = *in
	if in.Grok != nil {
		in, out := &in.Grok, &out.Grok
		*out = make([]GrokObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Samples != nil {
		in, out := &in.Samples, &out.Samples
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokParserObservation.
func (in *GrokParserObservation) DeepCopy() *GrokParserObservation {
	if in == nil {
		return nil
	}
	out := new(GrokParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokParserParameters) DeepCopyInto(out *GrokParserParameters) {
	*out = *in
	if in.Grok != nil {
		in, out := &in.Grok, &out.Grok
		*out = make([]GrokParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Samples != nil {
		in, out := &in.Samples, &out.Samples
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokParserParameters.
func (in *GrokParserParameters) DeepCopy() *GrokParserParameters {
	if in == nil {
		return nil
	}
	out := new(GrokParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupByInitParameters) DeepCopyInto(out *GroupByInitParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TagName != nil {
		in, out := &in.TagName, &out.TagName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupByInitParameters.
func (in *GroupByInitParameters) DeepCopy() *GroupByInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupByInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupByObservation) DeepCopyInto(out *GroupByObservation) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TagName != nil {
		in, out := &in.TagName, &out.TagName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupByObservation.
func (in *GroupByObservation) DeepCopy() *GroupByObservation {
	if in == nil {
		return nil
	}
	out := new(GroupByObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupByParameters) DeepCopyInto(out *GroupByParameters) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TagName != nil {
		in, out := &in.TagName, &out.TagName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupByParameters.
func (in *GroupByParameters) DeepCopy() *GroupByParameters {
	if in == nil {
		return nil
	}
	out := new(GroupByParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Index) DeepCopyInto(out *Index) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Index.
func (in *Index) DeepCopy() *Index {
	if in == nil {
		return nil
	}
	out := new(Index)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Index) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexFilterInitParameters) DeepCopyInto(out *IndexFilterInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexFilterInitParameters.
func (in *IndexFilterInitParameters) DeepCopy() *IndexFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexFilterObservation) DeepCopyInto(out *IndexFilterObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexFilterObservation.
func (in *IndexFilterObservation) DeepCopy() *IndexFilterObservation {
	if in == nil {
		return nil
	}
	out := new(IndexFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexFilterParameters) DeepCopyInto(out *IndexFilterParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexFilterParameters.
func (in *IndexFilterParameters) DeepCopy() *IndexFilterParameters {
	if in == nil {
		return nil
	}
	out := new(IndexFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexInitParameters) DeepCopyInto(out *IndexInitParameters) {
	*out = *in
	if in.DailyLimit != nil {
		in, out := &in.DailyLimit, &out.DailyLimit
		*out = new(float64)
		**out = **in
	}
	if in.DailyLimitReset != nil {
		in, out := &in.DailyLimitReset, &out.DailyLimitReset
		*out = make([]DailyLimitResetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyLimitWarningThresholdPercentage != nil {
		in, out := &in.DailyLimitWarningThresholdPercentage, &out.DailyLimitWarningThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.DisableDailyLimit != nil {
		in, out := &in.DisableDailyLimit, &out.DisableDailyLimit
		*out = new(bool)
		**out = **in
	}
	if in.ExclusionFilter != nil {
		in, out := &in.ExclusionFilter, &out.ExclusionFilter
		*out = make([]ExclusionFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]IndexFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexInitParameters.
func (in *IndexInitParameters) DeepCopy() *IndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexList) DeepCopyInto(out *IndexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Index, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexList.
func (in *IndexList) DeepCopy() *IndexList {
	if in == nil {
		return nil
	}
	out := new(IndexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexObservation) DeepCopyInto(out *IndexObservation) {
	*out = *in
	if in.DailyLimit != nil {
		in, out := &in.DailyLimit, &out.DailyLimit
		*out = new(float64)
		**out = **in
	}
	if in.DailyLimitReset != nil {
		in, out := &in.DailyLimitReset, &out.DailyLimitReset
		*out = make([]DailyLimitResetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyLimitWarningThresholdPercentage != nil {
		in, out := &in.DailyLimitWarningThresholdPercentage, &out.DailyLimitWarningThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.DisableDailyLimit != nil {
		in, out := &in.DisableDailyLimit, &out.DisableDailyLimit
		*out = new(bool)
		**out = **in
	}
	if in.ExclusionFilter != nil {
		in, out := &in.ExclusionFilter, &out.ExclusionFilter
		*out = make([]ExclusionFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]IndexFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexObservation.
func (in *IndexObservation) DeepCopy() *IndexObservation {
	if in == nil {
		return nil
	}
	out := new(IndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexOrder) DeepCopyInto(out *IndexOrder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexOrder.
func (in *IndexOrder) DeepCopy() *IndexOrder {
	if in == nil {
		return nil
	}
	out := new(IndexOrder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexOrder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexOrderInitParameters) DeepCopyInto(out *IndexOrderInitParameters) {
	*out = *in
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexOrderInitParameters.
func (in *IndexOrderInitParameters) DeepCopy() *IndexOrderInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexOrderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexOrderList) DeepCopyInto(out *IndexOrderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IndexOrder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexOrderList.
func (in *IndexOrderList) DeepCopy() *IndexOrderList {
	if in == nil {
		return nil
	}
	out := new(IndexOrderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexOrderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexOrderObservation) DeepCopyInto(out *IndexOrderObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexOrderObservation.
func (in *IndexOrderObservation) DeepCopy() *IndexOrderObservation {
	if in == nil {
		return nil
	}
	out := new(IndexOrderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexOrderParameters) DeepCopyInto(out *IndexOrderParameters) {
	*out = *in
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexOrderParameters.
func (in *IndexOrderParameters) DeepCopy() *IndexOrderParameters {
	if in == nil {
		return nil
	}
	out := new(IndexOrderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexOrderSpec) DeepCopyInto(out *IndexOrderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexOrderSpec.
func (in *IndexOrderSpec) DeepCopy() *IndexOrderSpec {
	if in == nil {
		return nil
	}
	out := new(IndexOrderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexOrderStatus) DeepCopyInto(out *IndexOrderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexOrderStatus.
func (in *IndexOrderStatus) DeepCopy() *IndexOrderStatus {
	if in == nil {
		return nil
	}
	out := new(IndexOrderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexParameters) DeepCopyInto(out *IndexParameters) {
	*out = *in
	if in.DailyLimit != nil {
		in, out := &in.DailyLimit, &out.DailyLimit
		*out = new(float64)
		**out = **in
	}
	if in.DailyLimitReset != nil {
		in, out := &in.DailyLimitReset, &out.DailyLimitReset
		*out = make([]DailyLimitResetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DailyLimitWarningThresholdPercentage != nil {
		in, out := &in.DailyLimitWarningThresholdPercentage, &out.DailyLimitWarningThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.DisableDailyLimit != nil {
		in, out := &in.DisableDailyLimit, &out.DisableDailyLimit
		*out = new(bool)
		**out = **in
	}
	if in.ExclusionFilter != nil {
		in, out := &in.ExclusionFilter, &out.ExclusionFilter
		*out = make([]ExclusionFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]IndexFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexParameters.
func (in *IndexParameters) DeepCopy() *IndexParameters {
	if in == nil {
		return nil
	}
	out := new(IndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexSpec) DeepCopyInto(out *IndexSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexSpec.
func (in *IndexSpec) DeepCopy() *IndexSpec {
	if in == nil {
		return nil
	}
	out := new(IndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexStatus) DeepCopyInto(out *IndexStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexStatus.
func (in *IndexStatus) DeepCopy() *IndexStatus {
	if in == nil {
		return nil
	}
	out := new(IndexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPipeline) DeepCopyInto(out *IntegrationPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPipeline.
func (in *IntegrationPipeline) DeepCopy() *IntegrationPipeline {
	if in == nil {
		return nil
	}
	out := new(IntegrationPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPipelineInitParameters) DeepCopyInto(out *IntegrationPipelineInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPipelineInitParameters.
func (in *IntegrationPipelineInitParameters) DeepCopy() *IntegrationPipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationPipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPipelineList) DeepCopyInto(out *IntegrationPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPipelineList.
func (in *IntegrationPipelineList) DeepCopy() *IntegrationPipelineList {
	if in == nil {
		return nil
	}
	out := new(IntegrationPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPipelineObservation) DeepCopyInto(out *IntegrationPipelineObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPipelineObservation.
func (in *IntegrationPipelineObservation) DeepCopy() *IntegrationPipelineObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationPipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPipelineParameters) DeepCopyInto(out *IntegrationPipelineParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPipelineParameters.
func (in *IntegrationPipelineParameters) DeepCopy() *IntegrationPipelineParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationPipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPipelineSpec) DeepCopyInto(out *IntegrationPipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPipelineSpec.
func (in *IntegrationPipelineSpec) DeepCopy() *IntegrationPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationPipelineStatus) DeepCopyInto(out *IntegrationPipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationPipelineStatus.
func (in *IntegrationPipelineStatus) DeepCopy() *IntegrationPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LookupProcessorInitParameters) DeepCopyInto(out *LookupProcessorInitParameters) {
	*out = *in
	if in.DefaultLookup != nil {
		in, out := &in.DefaultLookup, &out.DefaultLookup
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupTable != nil {
		in, out := &in.LookupTable, &out.LookupTable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LookupProcessorInitParameters.
func (in *LookupProcessorInitParameters) DeepCopy() *LookupProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(LookupProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LookupProcessorObservation) DeepCopyInto(out *LookupProcessorObservation) {
	*out = *in
	if in.DefaultLookup != nil {
		in, out := &in.DefaultLookup, &out.DefaultLookup
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupTable != nil {
		in, out := &in.LookupTable, &out.LookupTable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LookupProcessorObservation.
func (in *LookupProcessorObservation) DeepCopy() *LookupProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(LookupProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LookupProcessorParameters) DeepCopyInto(out *LookupProcessorParameters) {
	*out = *in
	if in.DefaultLookup != nil {
		in, out := &in.DefaultLookup, &out.DefaultLookup
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupTable != nil {
		in, out := &in.LookupTable, &out.LookupTable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LookupProcessorParameters.
func (in *LookupProcessorParameters) DeepCopy() *LookupProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(LookupProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MessageRemapperInitParameters) DeepCopyInto(out *MessageRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MessageRemapperInitParameters.
func (in *MessageRemapperInitParameters) DeepCopy() *MessageRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(MessageRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MessageRemapperObservation) DeepCopyInto(out *MessageRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MessageRemapperObservation.
func (in *MessageRemapperObservation) DeepCopy() *MessageRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(MessageRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MessageRemapperParameters) DeepCopyInto(out *MessageRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MessageRemapperParameters.
func (in *MessageRemapperParameters) DeepCopy() *MessageRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(MessageRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Metric) DeepCopyInto(out *Metric) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Metric.
func (in *Metric) DeepCopy() *Metric {
	if in == nil {
		return nil
	}
	out := new(Metric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Metric) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricFilterInitParameters) DeepCopyInto(out *MetricFilterInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricFilterInitParameters.
func (in *MetricFilterInitParameters) DeepCopy() *MetricFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricFilterObservation) DeepCopyInto(out *MetricFilterObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricFilterObservation.
func (in *MetricFilterObservation) DeepCopy() *MetricFilterObservation {
	if in == nil {
		return nil
	}
	out := new(MetricFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricFilterParameters) DeepCopyInto(out *MetricFilterParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricFilterParameters.
func (in *MetricFilterParameters) DeepCopy() *MetricFilterParameters {
	if in == nil {
		return nil
	}
	out := new(MetricFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricInitParameters) DeepCopyInto(out *MetricInitParameters) {
	*out = *in
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = make([]ComputeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]MetricFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupBy != nil {
		in, out := &in.GroupBy, &out.GroupBy
		*out = make([]GroupByInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricInitParameters.
func (in *MetricInitParameters) DeepCopy() *MetricInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricList) DeepCopyInto(out *MetricList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Metric, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricList.
func (in *MetricList) DeepCopy() *MetricList {
	if in == nil {
		return nil
	}
	out := new(MetricList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MetricList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricObservation) DeepCopyInto(out *MetricObservation) {
	*out = *in
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = make([]ComputeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]MetricFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupBy != nil {
		in, out := &in.GroupBy, &out.GroupBy
		*out = make([]GroupByObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricObservation.
func (in *MetricObservation) DeepCopy() *MetricObservation {
	if in == nil {
		return nil
	}
	out := new(MetricObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricParameters) DeepCopyInto(out *MetricParameters) {
	*out = *in
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = make([]ComputeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]MetricFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupBy != nil {
		in, out := &in.GroupBy, &out.GroupBy
		*out = make([]GroupByParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricParameters.
func (in *MetricParameters) DeepCopy() *MetricParameters {
	if in == nil {
		return nil
	}
	out := new(MetricParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricSpec) DeepCopyInto(out *MetricSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricSpec.
func (in *MetricSpec) DeepCopy() *MetricSpec {
	if in == nil {
		return nil
	}
	out := new(MetricSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricStatus) DeepCopyInto(out *MetricStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricStatus.
func (in *MetricStatus) DeepCopy() *MetricStatus {
	if in == nil {
		return nil
	}
	out := new(MetricStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineFilterInitParameters) DeepCopyInto(out *PipelineFilterInitParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineFilterInitParameters.
func (in *PipelineFilterInitParameters) DeepCopy() *PipelineFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineFilterObservation) DeepCopyInto(out *PipelineFilterObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineFilterObservation.
func (in *PipelineFilterObservation) DeepCopy() *PipelineFilterObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineFilterParameters) DeepCopyInto(out *PipelineFilterParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineFilterParameters.
func (in *PipelineFilterParameters) DeepCopy() *PipelineFilterParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineInitParameters) DeepCopyInto(out *PipelineInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]PipelineFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Processor != nil {
		in, out := &in.Processor, &out.Processor
		*out = make([]PipelineProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineInitParameters.
func (in *PipelineInitParameters) DeepCopy() *PipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineObservation) DeepCopyInto(out *PipelineObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]PipelineFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Processor != nil {
		in, out := &in.Processor, &out.Processor
		*out = make([]PipelineProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineObservation.
func (in *PipelineObservation) DeepCopy() *PipelineObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineOrder) DeepCopyInto(out *PipelineOrder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineOrder.
func (in *PipelineOrder) DeepCopy() *PipelineOrder {
	if in == nil {
		return nil
	}
	out := new(PipelineOrder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineOrder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineOrderInitParameters) DeepCopyInto(out *PipelineOrderInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pipelines != nil {
		in, out := &in.Pipelines, &out.Pipelines
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineOrderInitParameters.
func (in *PipelineOrderInitParameters) DeepCopy() *PipelineOrderInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineOrderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineOrderList) DeepCopyInto(out *PipelineOrderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PipelineOrder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineOrderList.
func (in *PipelineOrderList) DeepCopy() *PipelineOrderList {
	if in == nil {
		return nil
	}
	out := new(PipelineOrderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineOrderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineOrderObservation) DeepCopyInto(out *PipelineOrderObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pipelines != nil {
		in, out := &in.Pipelines, &out.Pipelines
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineOrderObservation.
func (in *PipelineOrderObservation) DeepCopy() *PipelineOrderObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineOrderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineOrderParameters) DeepCopyInto(out *PipelineOrderParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pipelines != nil {
		in, out := &in.Pipelines, &out.Pipelines
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineOrderParameters.
func (in *PipelineOrderParameters) DeepCopy() *PipelineOrderParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineOrderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineOrderSpec) DeepCopyInto(out *PipelineOrderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineOrderSpec.
func (in *PipelineOrderSpec) DeepCopy() *PipelineOrderSpec {
	if in == nil {
		return nil
	}
	out := new(PipelineOrderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineOrderStatus) DeepCopyInto(out *PipelineOrderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineOrderStatus.
func (in *PipelineOrderStatus) DeepCopy() *PipelineOrderStatus {
	if in == nil {
		return nil
	}
	out := new(PipelineOrderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameters) DeepCopyInto(out *PipelineParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]PipelineFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Processor != nil {
		in, out := &in.Processor, &out.Processor
		*out = make([]PipelineProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameters.
func (in *PipelineParameters) DeepCopy() *PipelineParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineProcessorInitParameters) DeepCopyInto(out *PipelineProcessorInitParameters) {
	*out = *in
	if in.ArithmeticProcessor != nil {
		in, out := &in.ArithmeticProcessor, &out.ArithmeticProcessor
		*out = make([]ProcessorArithmeticProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttributeRemapper != nil {
		in, out := &in.AttributeRemapper, &out.AttributeRemapper
		*out = make([]ProcessorAttributeRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CategoryProcessor != nil {
		in, out := &in.CategoryProcessor, &out.CategoryProcessor
		*out = make([]ProcessorCategoryProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRemapper != nil {
		in, out := &in.DateRemapper, &out.DateRemapper
		*out = make([]ProcessorDateRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoIPParser != nil {
		in, out := &in.GeoIPParser, &out.GeoIPParser
		*out = make([]ProcessorGeoIPParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GrokParser != nil {
		in, out := &in.GrokParser, &out.GrokParser
		*out = make([]ProcessorGrokParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookupProcessor != nil {
		in, out := &in.LookupProcessor, &out.LookupProcessor
		*out = make([]ProcessorLookupProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MessageRemapper != nil {
		in, out := &in.MessageRemapper, &out.MessageRemapper
		*out = make([]ProcessorMessageRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceTableLookupProcessor != nil {
		in, out := &in.ReferenceTableLookupProcessor, &out.ReferenceTableLookupProcessor
		*out = make([]ReferenceTableLookupProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRemapper != nil {
		in, out := &in.ServiceRemapper, &out.ServiceRemapper
		*out = make([]ServiceRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusRemapper != nil {
		in, out := &in.StatusRemapper, &out.StatusRemapper
		*out = make([]StatusRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StringBuilderProcessor != nil {
		in, out := &in.StringBuilderProcessor, &out.StringBuilderProcessor
		*out = make([]StringBuilderProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TraceIDRemapper != nil {
		in, out := &in.TraceIDRemapper, &out.TraceIDRemapper
		*out = make([]TraceIDRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLParser != nil {
		in, out := &in.URLParser, &out.URLParser
		*out = make([]URLParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAgentParser != nil {
		in, out := &in.UserAgentParser, &out.UserAgentParser
		*out = make([]UserAgentParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineProcessorInitParameters.
func (in *PipelineProcessorInitParameters) DeepCopy() *PipelineProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineProcessorObservation) DeepCopyInto(out *PipelineProcessorObservation) {
	*out = *in
	if in.ArithmeticProcessor != nil {
		in, out := &in.ArithmeticProcessor, &out.ArithmeticProcessor
		*out = make([]ProcessorArithmeticProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttributeRemapper != nil {
		in, out := &in.AttributeRemapper, &out.AttributeRemapper
		*out = make([]ProcessorAttributeRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CategoryProcessor != nil {
		in, out := &in.CategoryProcessor, &out.CategoryProcessor
		*out = make([]ProcessorCategoryProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRemapper != nil {
		in, out := &in.DateRemapper, &out.DateRemapper
		*out = make([]ProcessorDateRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoIPParser != nil {
		in, out := &in.GeoIPParser, &out.GeoIPParser
		*out = make([]ProcessorGeoIPParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GrokParser != nil {
		in, out := &in.GrokParser, &out.GrokParser
		*out = make([]ProcessorGrokParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookupProcessor != nil {
		in, out := &in.LookupProcessor, &out.LookupProcessor
		*out = make([]ProcessorLookupProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MessageRemapper != nil {
		in, out := &in.MessageRemapper, &out.MessageRemapper
		*out = make([]ProcessorMessageRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceTableLookupProcessor != nil {
		in, out := &in.ReferenceTableLookupProcessor, &out.ReferenceTableLookupProcessor
		*out = make([]ReferenceTableLookupProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRemapper != nil {
		in, out := &in.ServiceRemapper, &out.ServiceRemapper
		*out = make([]ServiceRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusRemapper != nil {
		in, out := &in.StatusRemapper, &out.StatusRemapper
		*out = make([]StatusRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StringBuilderProcessor != nil {
		in, out := &in.StringBuilderProcessor, &out.StringBuilderProcessor
		*out = make([]StringBuilderProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TraceIDRemapper != nil {
		in, out := &in.TraceIDRemapper, &out.TraceIDRemapper
		*out = make([]TraceIDRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLParser != nil {
		in, out := &in.URLParser, &out.URLParser
		*out = make([]URLParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAgentParser != nil {
		in, out := &in.UserAgentParser, &out.UserAgentParser
		*out = make([]UserAgentParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineProcessorObservation.
func (in *PipelineProcessorObservation) DeepCopy() *PipelineProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineProcessorParameters) DeepCopyInto(out *PipelineProcessorParameters) {
	*out = *in
	if in.ArithmeticProcessor != nil {
		in, out := &in.ArithmeticProcessor, &out.ArithmeticProcessor
		*out = make([]ProcessorArithmeticProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttributeRemapper != nil {
		in, out := &in.AttributeRemapper, &out.AttributeRemapper
		*out = make([]ProcessorAttributeRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CategoryProcessor != nil {
		in, out := &in.CategoryProcessor, &out.CategoryProcessor
		*out = make([]ProcessorCategoryProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRemapper != nil {
		in, out := &in.DateRemapper, &out.DateRemapper
		*out = make([]ProcessorDateRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoIPParser != nil {
		in, out := &in.GeoIPParser, &out.GeoIPParser
		*out = make([]ProcessorGeoIPParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GrokParser != nil {
		in, out := &in.GrokParser, &out.GrokParser
		*out = make([]ProcessorGrokParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookupProcessor != nil {
		in, out := &in.LookupProcessor, &out.LookupProcessor
		*out = make([]ProcessorLookupProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MessageRemapper != nil {
		in, out := &in.MessageRemapper, &out.MessageRemapper
		*out = make([]ProcessorMessageRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceTableLookupProcessor != nil {
		in, out := &in.ReferenceTableLookupProcessor, &out.ReferenceTableLookupProcessor
		*out = make([]ReferenceTableLookupProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRemapper != nil {
		in, out := &in.ServiceRemapper, &out.ServiceRemapper
		*out = make([]ServiceRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusRemapper != nil {
		in, out := &in.StatusRemapper, &out.StatusRemapper
		*out = make([]StatusRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StringBuilderProcessor != nil {
		in, out := &in.StringBuilderProcessor, &out.StringBuilderProcessor
		*out = make([]StringBuilderProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TraceIDRemapper != nil {
		in, out := &in.TraceIDRemapper, &out.TraceIDRemapper
		*out = make([]TraceIDRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLParser != nil {
		in, out := &in.URLParser, &out.URLParser
		*out = make([]URLParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAgentParser != nil {
		in, out := &in.UserAgentParser, &out.UserAgentParser
		*out = make([]UserAgentParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineProcessorParameters.
func (in *PipelineProcessorParameters) DeepCopy() *PipelineProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorArithmeticProcessorInitParameters) DeepCopyInto(out *ProcessorArithmeticProcessorInitParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorArithmeticProcessorInitParameters.
func (in *ProcessorArithmeticProcessorInitParameters) DeepCopy() *ProcessorArithmeticProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorArithmeticProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorArithmeticProcessorObservation) DeepCopyInto(out *ProcessorArithmeticProcessorObservation) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorArithmeticProcessorObservation.
func (in *ProcessorArithmeticProcessorObservation) DeepCopy() *ProcessorArithmeticProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorArithmeticProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorArithmeticProcessorParameters) DeepCopyInto(out *ProcessorArithmeticProcessorParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorArithmeticProcessorParameters.
func (in *ProcessorArithmeticProcessorParameters) DeepCopy() *ProcessorArithmeticProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorArithmeticProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorAttributeRemapperInitParameters) DeepCopyInto(out *ProcessorAttributeRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideOnConflict != nil {
		in, out := &in.OverrideOnConflict, &out.OverrideOnConflict
		*out = new(bool)
		**out = **in
	}
	if in.PreserveSource != nil {
		in, out := &in.PreserveSource, &out.PreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetFormat != nil {
		in, out := &in.TargetFormat, &out.TargetFormat
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorAttributeRemapperInitParameters.
func (in *ProcessorAttributeRemapperInitParameters) DeepCopy() *ProcessorAttributeRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorAttributeRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorAttributeRemapperObservation) DeepCopyInto(out *ProcessorAttributeRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideOnConflict != nil {
		in, out := &in.OverrideOnConflict, &out.OverrideOnConflict
		*out = new(bool)
		**out = **in
	}
	if in.PreserveSource != nil {
		in, out := &in.PreserveSource, &out.PreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetFormat != nil {
		in, out := &in.TargetFormat, &out.TargetFormat
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorAttributeRemapperObservation.
func (in *ProcessorAttributeRemapperObservation) DeepCopy() *ProcessorAttributeRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorAttributeRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorAttributeRemapperParameters) DeepCopyInto(out *ProcessorAttributeRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideOnConflict != nil {
		in, out := &in.OverrideOnConflict, &out.OverrideOnConflict
		*out = new(bool)
		**out = **in
	}
	if in.PreserveSource != nil {
		in, out := &in.PreserveSource, &out.PreserveSource
		*out = new(bool)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetFormat != nil {
		in, out := &in.TargetFormat, &out.TargetFormat
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorAttributeRemapperParameters.
func (in *ProcessorAttributeRemapperParameters) DeepCopy() *ProcessorAttributeRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorAttributeRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorCategoryProcessorInitParameters) DeepCopyInto(out *ProcessorCategoryProcessorInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = make([]CategoryProcessorCategoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorCategoryProcessorInitParameters.
func (in *ProcessorCategoryProcessorInitParameters) DeepCopy() *ProcessorCategoryProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorCategoryProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorCategoryProcessorObservation) DeepCopyInto(out *ProcessorCategoryProcessorObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = make([]CategoryProcessorCategoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorCategoryProcessorObservation.
func (in *ProcessorCategoryProcessorObservation) DeepCopy() *ProcessorCategoryProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorCategoryProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorCategoryProcessorParameters) DeepCopyInto(out *ProcessorCategoryProcessorParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = make([]CategoryProcessorCategoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorCategoryProcessorParameters.
func (in *ProcessorCategoryProcessorParameters) DeepCopy() *ProcessorCategoryProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorCategoryProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorDateRemapperInitParameters) DeepCopyInto(out *ProcessorDateRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorDateRemapperInitParameters.
func (in *ProcessorDateRemapperInitParameters) DeepCopy() *ProcessorDateRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorDateRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorDateRemapperObservation) DeepCopyInto(out *ProcessorDateRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorDateRemapperObservation.
func (in *ProcessorDateRemapperObservation) DeepCopy() *ProcessorDateRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorDateRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorDateRemapperParameters) DeepCopyInto(out *ProcessorDateRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorDateRemapperParameters.
func (in *ProcessorDateRemapperParameters) DeepCopy() *ProcessorDateRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorDateRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorGeoIPParserInitParameters) DeepCopyInto(out *ProcessorGeoIPParserInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorGeoIPParserInitParameters.
func (in *ProcessorGeoIPParserInitParameters) DeepCopy() *ProcessorGeoIPParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorGeoIPParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorGeoIPParserObservation) DeepCopyInto(out *ProcessorGeoIPParserObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorGeoIPParserObservation.
func (in *ProcessorGeoIPParserObservation) DeepCopy() *ProcessorGeoIPParserObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorGeoIPParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorGeoIPParserParameters) DeepCopyInto(out *ProcessorGeoIPParserParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorGeoIPParserParameters.
func (in *ProcessorGeoIPParserParameters) DeepCopy() *ProcessorGeoIPParserParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorGeoIPParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorGrokParserInitParameters) DeepCopyInto(out *ProcessorGrokParserInitParameters) {
	*out = *in
	if in.Grok != nil {
		in, out := &in.Grok, &out.Grok
		*out = make([]GrokParserGrokInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Samples != nil {
		in, out := &in.Samples, &out.Samples
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorGrokParserInitParameters.
func (in *ProcessorGrokParserInitParameters) DeepCopy() *ProcessorGrokParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorGrokParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorGrokParserObservation) DeepCopyInto(out *ProcessorGrokParserObservation) {
	*out = *in
	if in.Grok != nil {
		in, out := &in.Grok, &out.Grok
		*out = make([]GrokParserGrokObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Samples != nil {
		in, out := &in.Samples, &out.Samples
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorGrokParserObservation.
func (in *ProcessorGrokParserObservation) DeepCopy() *ProcessorGrokParserObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorGrokParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorGrokParserParameters) DeepCopyInto(out *ProcessorGrokParserParameters) {
	*out = *in
	if in.Grok != nil {
		in, out := &in.Grok, &out.Grok
		*out = make([]GrokParserGrokParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Samples != nil {
		in, out := &in.Samples, &out.Samples
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorGrokParserParameters.
func (in *ProcessorGrokParserParameters) DeepCopy() *ProcessorGrokParserParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorGrokParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorInitParameters) DeepCopyInto(out *ProcessorInitParameters) {
	*out = *in
	if in.ArithmeticProcessor != nil {
		in, out := &in.ArithmeticProcessor, &out.ArithmeticProcessor
		*out = make([]ArithmeticProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttributeRemapper != nil {
		in, out := &in.AttributeRemapper, &out.AttributeRemapper
		*out = make([]AttributeRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CategoryProcessor != nil {
		in, out := &in.CategoryProcessor, &out.CategoryProcessor
		*out = make([]CategoryProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRemapper != nil {
		in, out := &in.DateRemapper, &out.DateRemapper
		*out = make([]DateRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoIPParser != nil {
		in, out := &in.GeoIPParser, &out.GeoIPParser
		*out = make([]GeoIPParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GrokParser != nil {
		in, out := &in.GrokParser, &out.GrokParser
		*out = make([]GrokParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookupProcessor != nil {
		in, out := &in.LookupProcessor, &out.LookupProcessor
		*out = make([]LookupProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MessageRemapper != nil {
		in, out := &in.MessageRemapper, &out.MessageRemapper
		*out = make([]MessageRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]PipelineInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceTableLookupProcessor != nil {
		in, out := &in.ReferenceTableLookupProcessor, &out.ReferenceTableLookupProcessor
		*out = make([]ProcessorReferenceTableLookupProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRemapper != nil {
		in, out := &in.ServiceRemapper, &out.ServiceRemapper
		*out = make([]ProcessorServiceRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusRemapper != nil {
		in, out := &in.StatusRemapper, &out.StatusRemapper
		*out = make([]ProcessorStatusRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StringBuilderProcessor != nil {
		in, out := &in.StringBuilderProcessor, &out.StringBuilderProcessor
		*out = make([]ProcessorStringBuilderProcessorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TraceIDRemapper != nil {
		in, out := &in.TraceIDRemapper, &out.TraceIDRemapper
		*out = make([]ProcessorTraceIDRemapperInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLParser != nil {
		in, out := &in.URLParser, &out.URLParser
		*out = make([]ProcessorURLParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAgentParser != nil {
		in, out := &in.UserAgentParser, &out.UserAgentParser
		*out = make([]ProcessorUserAgentParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorInitParameters.
func (in *ProcessorInitParameters) DeepCopy() *ProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorLookupProcessorInitParameters) DeepCopyInto(out *ProcessorLookupProcessorInitParameters) {
	*out = *in
	if in.DefaultLookup != nil {
		in, out := &in.DefaultLookup, &out.DefaultLookup
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupTable != nil {
		in, out := &in.LookupTable, &out.LookupTable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorLookupProcessorInitParameters.
func (in *ProcessorLookupProcessorInitParameters) DeepCopy() *ProcessorLookupProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorLookupProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorLookupProcessorObservation) DeepCopyInto(out *ProcessorLookupProcessorObservation) {
	*out = *in
	if in.DefaultLookup != nil {
		in, out := &in.DefaultLookup, &out.DefaultLookup
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupTable != nil {
		in, out := &in.LookupTable, &out.LookupTable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorLookupProcessorObservation.
func (in *ProcessorLookupProcessorObservation) DeepCopy() *ProcessorLookupProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorLookupProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorLookupProcessorParameters) DeepCopyInto(out *ProcessorLookupProcessorParameters) {
	*out = *in
	if in.DefaultLookup != nil {
		in, out := &in.DefaultLookup, &out.DefaultLookup
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupTable != nil {
		in, out := &in.LookupTable, &out.LookupTable
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorLookupProcessorParameters.
func (in *ProcessorLookupProcessorParameters) DeepCopy() *ProcessorLookupProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorLookupProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorMessageRemapperInitParameters) DeepCopyInto(out *ProcessorMessageRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorMessageRemapperInitParameters.
func (in *ProcessorMessageRemapperInitParameters) DeepCopy() *ProcessorMessageRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorMessageRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorMessageRemapperObservation) DeepCopyInto(out *ProcessorMessageRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorMessageRemapperObservation.
func (in *ProcessorMessageRemapperObservation) DeepCopy() *ProcessorMessageRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorMessageRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorMessageRemapperParameters) DeepCopyInto(out *ProcessorMessageRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorMessageRemapperParameters.
func (in *ProcessorMessageRemapperParameters) DeepCopy() *ProcessorMessageRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorMessageRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorObservation) DeepCopyInto(out *ProcessorObservation) {
	*out = *in
	if in.ArithmeticProcessor != nil {
		in, out := &in.ArithmeticProcessor, &out.ArithmeticProcessor
		*out = make([]ArithmeticProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttributeRemapper != nil {
		in, out := &in.AttributeRemapper, &out.AttributeRemapper
		*out = make([]AttributeRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CategoryProcessor != nil {
		in, out := &in.CategoryProcessor, &out.CategoryProcessor
		*out = make([]CategoryProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRemapper != nil {
		in, out := &in.DateRemapper, &out.DateRemapper
		*out = make([]DateRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoIPParser != nil {
		in, out := &in.GeoIPParser, &out.GeoIPParser
		*out = make([]GeoIPParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GrokParser != nil {
		in, out := &in.GrokParser, &out.GrokParser
		*out = make([]GrokParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookupProcessor != nil {
		in, out := &in.LookupProcessor, &out.LookupProcessor
		*out = make([]LookupProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MessageRemapper != nil {
		in, out := &in.MessageRemapper, &out.MessageRemapper
		*out = make([]MessageRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]PipelineObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceTableLookupProcessor != nil {
		in, out := &in.ReferenceTableLookupProcessor, &out.ReferenceTableLookupProcessor
		*out = make([]ProcessorReferenceTableLookupProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRemapper != nil {
		in, out := &in.ServiceRemapper, &out.ServiceRemapper
		*out = make([]ProcessorServiceRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusRemapper != nil {
		in, out := &in.StatusRemapper, &out.StatusRemapper
		*out = make([]ProcessorStatusRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StringBuilderProcessor != nil {
		in, out := &in.StringBuilderProcessor, &out.StringBuilderProcessor
		*out = make([]ProcessorStringBuilderProcessorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TraceIDRemapper != nil {
		in, out := &in.TraceIDRemapper, &out.TraceIDRemapper
		*out = make([]ProcessorTraceIDRemapperObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLParser != nil {
		in, out := &in.URLParser, &out.URLParser
		*out = make([]ProcessorURLParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAgentParser != nil {
		in, out := &in.UserAgentParser, &out.UserAgentParser
		*out = make([]ProcessorUserAgentParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorObservation.
func (in *ProcessorObservation) DeepCopy() *ProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorParameters) DeepCopyInto(out *ProcessorParameters) {
	*out = *in
	if in.ArithmeticProcessor != nil {
		in, out := &in.ArithmeticProcessor, &out.ArithmeticProcessor
		*out = make([]ArithmeticProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttributeRemapper != nil {
		in, out := &in.AttributeRemapper, &out.AttributeRemapper
		*out = make([]AttributeRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CategoryProcessor != nil {
		in, out := &in.CategoryProcessor, &out.CategoryProcessor
		*out = make([]CategoryProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DateRemapper != nil {
		in, out := &in.DateRemapper, &out.DateRemapper
		*out = make([]DateRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoIPParser != nil {
		in, out := &in.GeoIPParser, &out.GeoIPParser
		*out = make([]GeoIPParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GrokParser != nil {
		in, out := &in.GrokParser, &out.GrokParser
		*out = make([]GrokParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LookupProcessor != nil {
		in, out := &in.LookupProcessor, &out.LookupProcessor
		*out = make([]LookupProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MessageRemapper != nil {
		in, out := &in.MessageRemapper, &out.MessageRemapper
		*out = make([]MessageRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = make([]PipelineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceTableLookupProcessor != nil {
		in, out := &in.ReferenceTableLookupProcessor, &out.ReferenceTableLookupProcessor
		*out = make([]ProcessorReferenceTableLookupProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRemapper != nil {
		in, out := &in.ServiceRemapper, &out.ServiceRemapper
		*out = make([]ProcessorServiceRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusRemapper != nil {
		in, out := &in.StatusRemapper, &out.StatusRemapper
		*out = make([]ProcessorStatusRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StringBuilderProcessor != nil {
		in, out := &in.StringBuilderProcessor, &out.StringBuilderProcessor
		*out = make([]ProcessorStringBuilderProcessorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TraceIDRemapper != nil {
		in, out := &in.TraceIDRemapper, &out.TraceIDRemapper
		*out = make([]ProcessorTraceIDRemapperParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLParser != nil {
		in, out := &in.URLParser, &out.URLParser
		*out = make([]ProcessorURLParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserAgentParser != nil {
		in, out := &in.UserAgentParser, &out.UserAgentParser
		*out = make([]ProcessorUserAgentParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorParameters.
func (in *ProcessorParameters) DeepCopy() *ProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorReferenceTableLookupProcessorInitParameters) DeepCopyInto(out *ProcessorReferenceTableLookupProcessorInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupEnrichmentTable != nil {
		in, out := &in.LookupEnrichmentTable, &out.LookupEnrichmentTable
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorReferenceTableLookupProcessorInitParameters.
func (in *ProcessorReferenceTableLookupProcessorInitParameters) DeepCopy() *ProcessorReferenceTableLookupProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorReferenceTableLookupProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorReferenceTableLookupProcessorObservation) DeepCopyInto(out *ProcessorReferenceTableLookupProcessorObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupEnrichmentTable != nil {
		in, out := &in.LookupEnrichmentTable, &out.LookupEnrichmentTable
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorReferenceTableLookupProcessorObservation.
func (in *ProcessorReferenceTableLookupProcessorObservation) DeepCopy() *ProcessorReferenceTableLookupProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorReferenceTableLookupProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorReferenceTableLookupProcessorParameters) DeepCopyInto(out *ProcessorReferenceTableLookupProcessorParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupEnrichmentTable != nil {
		in, out := &in.LookupEnrichmentTable, &out.LookupEnrichmentTable
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorReferenceTableLookupProcessorParameters.
func (in *ProcessorReferenceTableLookupProcessorParameters) DeepCopy() *ProcessorReferenceTableLookupProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorReferenceTableLookupProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorServiceRemapperInitParameters) DeepCopyInto(out *ProcessorServiceRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorServiceRemapperInitParameters.
func (in *ProcessorServiceRemapperInitParameters) DeepCopy() *ProcessorServiceRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorServiceRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorServiceRemapperObservation) DeepCopyInto(out *ProcessorServiceRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorServiceRemapperObservation.
func (in *ProcessorServiceRemapperObservation) DeepCopy() *ProcessorServiceRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorServiceRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorServiceRemapperParameters) DeepCopyInto(out *ProcessorServiceRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorServiceRemapperParameters.
func (in *ProcessorServiceRemapperParameters) DeepCopy() *ProcessorServiceRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorServiceRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorStatusRemapperInitParameters) DeepCopyInto(out *ProcessorStatusRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorStatusRemapperInitParameters.
func (in *ProcessorStatusRemapperInitParameters) DeepCopy() *ProcessorStatusRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorStatusRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorStatusRemapperObservation) DeepCopyInto(out *ProcessorStatusRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorStatusRemapperObservation.
func (in *ProcessorStatusRemapperObservation) DeepCopy() *ProcessorStatusRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorStatusRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorStatusRemapperParameters) DeepCopyInto(out *ProcessorStatusRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorStatusRemapperParameters.
func (in *ProcessorStatusRemapperParameters) DeepCopy() *ProcessorStatusRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorStatusRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorStringBuilderProcessorInitParameters) DeepCopyInto(out *ProcessorStringBuilderProcessorInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorStringBuilderProcessorInitParameters.
func (in *ProcessorStringBuilderProcessorInitParameters) DeepCopy() *ProcessorStringBuilderProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorStringBuilderProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorStringBuilderProcessorObservation) DeepCopyInto(out *ProcessorStringBuilderProcessorObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorStringBuilderProcessorObservation.
func (in *ProcessorStringBuilderProcessorObservation) DeepCopy() *ProcessorStringBuilderProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorStringBuilderProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorStringBuilderProcessorParameters) DeepCopyInto(out *ProcessorStringBuilderProcessorParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorStringBuilderProcessorParameters.
func (in *ProcessorStringBuilderProcessorParameters) DeepCopy() *ProcessorStringBuilderProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorStringBuilderProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorTraceIDRemapperInitParameters) DeepCopyInto(out *ProcessorTraceIDRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorTraceIDRemapperInitParameters.
func (in *ProcessorTraceIDRemapperInitParameters) DeepCopy() *ProcessorTraceIDRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorTraceIDRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorTraceIDRemapperObservation) DeepCopyInto(out *ProcessorTraceIDRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorTraceIDRemapperObservation.
func (in *ProcessorTraceIDRemapperObservation) DeepCopy() *ProcessorTraceIDRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorTraceIDRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorTraceIDRemapperParameters) DeepCopyInto(out *ProcessorTraceIDRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorTraceIDRemapperParameters.
func (in *ProcessorTraceIDRemapperParameters) DeepCopy() *ProcessorTraceIDRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorTraceIDRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorURLParserInitParameters) DeepCopyInto(out *ProcessorURLParserInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NormalizeEndingSlashes != nil {
		in, out := &in.NormalizeEndingSlashes, &out.NormalizeEndingSlashes
		*out = new(bool)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorURLParserInitParameters.
func (in *ProcessorURLParserInitParameters) DeepCopy() *ProcessorURLParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorURLParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorURLParserObservation) DeepCopyInto(out *ProcessorURLParserObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NormalizeEndingSlashes != nil {
		in, out := &in.NormalizeEndingSlashes, &out.NormalizeEndingSlashes
		*out = new(bool)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorURLParserObservation.
func (in *ProcessorURLParserObservation) DeepCopy() *ProcessorURLParserObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorURLParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorURLParserParameters) DeepCopyInto(out *ProcessorURLParserParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NormalizeEndingSlashes != nil {
		in, out := &in.NormalizeEndingSlashes, &out.NormalizeEndingSlashes
		*out = new(bool)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorURLParserParameters.
func (in *ProcessorURLParserParameters) DeepCopy() *ProcessorURLParserParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorURLParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorUserAgentParserInitParameters) DeepCopyInto(out *ProcessorUserAgentParserInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsEncoded != nil {
		in, out := &in.IsEncoded, &out.IsEncoded
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorUserAgentParserInitParameters.
func (in *ProcessorUserAgentParserInitParameters) DeepCopy() *ProcessorUserAgentParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorUserAgentParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorUserAgentParserObservation) DeepCopyInto(out *ProcessorUserAgentParserObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsEncoded != nil {
		in, out := &in.IsEncoded, &out.IsEncoded
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorUserAgentParserObservation.
func (in *ProcessorUserAgentParserObservation) DeepCopy() *ProcessorUserAgentParserObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorUserAgentParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorUserAgentParserParameters) DeepCopyInto(out *ProcessorUserAgentParserParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsEncoded != nil {
		in, out := &in.IsEncoded, &out.IsEncoded
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorUserAgentParserParameters.
func (in *ProcessorUserAgentParserParameters) DeepCopy() *ProcessorUserAgentParserParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorUserAgentParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceTableLookupProcessorInitParameters) DeepCopyInto(out *ReferenceTableLookupProcessorInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupEnrichmentTable != nil {
		in, out := &in.LookupEnrichmentTable, &out.LookupEnrichmentTable
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceTableLookupProcessorInitParameters.
func (in *ReferenceTableLookupProcessorInitParameters) DeepCopy() *ReferenceTableLookupProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReferenceTableLookupProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceTableLookupProcessorObservation) DeepCopyInto(out *ReferenceTableLookupProcessorObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupEnrichmentTable != nil {
		in, out := &in.LookupEnrichmentTable, &out.LookupEnrichmentTable
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceTableLookupProcessorObservation.
func (in *ReferenceTableLookupProcessorObservation) DeepCopy() *ReferenceTableLookupProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(ReferenceTableLookupProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReferenceTableLookupProcessorParameters) DeepCopyInto(out *ReferenceTableLookupProcessorParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LookupEnrichmentTable != nil {
		in, out := &in.LookupEnrichmentTable, &out.LookupEnrichmentTable
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReferenceTableLookupProcessorParameters.
func (in *ReferenceTableLookupProcessorParameters) DeepCopy() *ReferenceTableLookupProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(ReferenceTableLookupProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ArchiveInitParameters) DeepCopyInto(out *S3ArchiveInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ArchiveInitParameters.
func (in *S3ArchiveInitParameters) DeepCopy() *S3ArchiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(S3ArchiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ArchiveObservation) DeepCopyInto(out *S3ArchiveObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ArchiveObservation.
func (in *S3ArchiveObservation) DeepCopy() *S3ArchiveObservation {
	if in == nil {
		return nil
	}
	out := new(S3ArchiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ArchiveParameters) DeepCopyInto(out *S3ArchiveParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ArchiveParameters.
func (in *S3ArchiveParameters) DeepCopy() *S3ArchiveParameters {
	if in == nil {
		return nil
	}
	out := new(S3ArchiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRemapperInitParameters) DeepCopyInto(out *ServiceRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRemapperInitParameters.
func (in *ServiceRemapperInitParameters) DeepCopy() *ServiceRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRemapperObservation) DeepCopyInto(out *ServiceRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRemapperObservation.
func (in *ServiceRemapperObservation) DeepCopy() *ServiceRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRemapperParameters) DeepCopyInto(out *ServiceRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRemapperParameters.
func (in *ServiceRemapperParameters) DeepCopy() *ServiceRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusRemapperInitParameters) DeepCopyInto(out *StatusRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusRemapperInitParameters.
func (in *StatusRemapperInitParameters) DeepCopy() *StatusRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(StatusRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusRemapperObservation) DeepCopyInto(out *StatusRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusRemapperObservation.
func (in *StatusRemapperObservation) DeepCopy() *StatusRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(StatusRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusRemapperParameters) DeepCopyInto(out *StatusRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusRemapperParameters.
func (in *StatusRemapperParameters) DeepCopy() *StatusRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(StatusRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StringBuilderProcessorInitParameters) DeepCopyInto(out *StringBuilderProcessorInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringBuilderProcessorInitParameters.
func (in *StringBuilderProcessorInitParameters) DeepCopy() *StringBuilderProcessorInitParameters {
	if in == nil {
		return nil
	}
	out := new(StringBuilderProcessorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StringBuilderProcessorObservation) DeepCopyInto(out *StringBuilderProcessorObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringBuilderProcessorObservation.
func (in *StringBuilderProcessorObservation) DeepCopy() *StringBuilderProcessorObservation {
	if in == nil {
		return nil
	}
	out := new(StringBuilderProcessorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StringBuilderProcessorParameters) DeepCopyInto(out *StringBuilderProcessorParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReplaceMissing != nil {
		in, out := &in.IsReplaceMissing, &out.IsReplaceMissing
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringBuilderProcessorParameters.
func (in *StringBuilderProcessorParameters) DeepCopy() *StringBuilderProcessorParameters {
	if in == nil {
		return nil
	}
	out := new(StringBuilderProcessorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceIDRemapperInitParameters) DeepCopyInto(out *TraceIDRemapperInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceIDRemapperInitParameters.
func (in *TraceIDRemapperInitParameters) DeepCopy() *TraceIDRemapperInitParameters {
	if in == nil {
		return nil
	}
	out := new(TraceIDRemapperInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceIDRemapperObservation) DeepCopyInto(out *TraceIDRemapperObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceIDRemapperObservation.
func (in *TraceIDRemapperObservation) DeepCopy() *TraceIDRemapperObservation {
	if in == nil {
		return nil
	}
	out := new(TraceIDRemapperObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TraceIDRemapperParameters) DeepCopyInto(out *TraceIDRemapperParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TraceIDRemapperParameters.
func (in *TraceIDRemapperParameters) DeepCopy() *TraceIDRemapperParameters {
	if in == nil {
		return nil
	}
	out := new(TraceIDRemapperParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLParserInitParameters) DeepCopyInto(out *URLParserInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NormalizeEndingSlashes != nil {
		in, out := &in.NormalizeEndingSlashes, &out.NormalizeEndingSlashes
		*out = new(bool)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLParserInitParameters.
func (in *URLParserInitParameters) DeepCopy() *URLParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLParserObservation) DeepCopyInto(out *URLParserObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NormalizeEndingSlashes != nil {
		in, out := &in.NormalizeEndingSlashes, &out.NormalizeEndingSlashes
		*out = new(bool)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLParserObservation.
func (in *URLParserObservation) DeepCopy() *URLParserObservation {
	if in == nil {
		return nil
	}
	out := new(URLParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLParserParameters) DeepCopyInto(out *URLParserParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NormalizeEndingSlashes != nil {
		in, out := &in.NormalizeEndingSlashes, &out.NormalizeEndingSlashes
		*out = new(bool)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLParserParameters.
func (in *URLParserParameters) DeepCopy() *URLParserParameters {
	if in == nil {
		return nil
	}
	out := new(URLParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentParserInitParameters) DeepCopyInto(out *UserAgentParserInitParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsEncoded != nil {
		in, out := &in.IsEncoded, &out.IsEncoded
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentParserInitParameters.
func (in *UserAgentParserInitParameters) DeepCopy() *UserAgentParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserAgentParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentParserObservation) DeepCopyInto(out *UserAgentParserObservation) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsEncoded != nil {
		in, out := &in.IsEncoded, &out.IsEncoded
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentParserObservation.
func (in *UserAgentParserObservation) DeepCopy() *UserAgentParserObservation {
	if in == nil {
		return nil
	}
	out := new(UserAgentParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentParserParameters) DeepCopyInto(out *UserAgentParserParameters) {
	*out = *in
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsEncoded != nil {
		in, out := &in.IsEncoded, &out.IsEncoded
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentParserParameters.
func (in *UserAgentParserParameters) DeepCopy() *UserAgentParserParameters {
	if in == nil {
		return nil
	}
	out := new(UserAgentParserParameters)
	in.DeepCopyInto(out)
	return out
}
