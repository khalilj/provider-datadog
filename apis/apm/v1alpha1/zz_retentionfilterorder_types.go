// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RetentionFilterOrderInitParameters struct {

	// (List of String) The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.
	// The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.
	FilterIds []*string `json:"filterIds,omitempty" tf:"filter_ids,omitempty"`
}

type RetentionFilterOrderObservation struct {

	// (List of String) The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.
	// The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.
	FilterIds []*string `json:"filterIds,omitempty" tf:"filter_ids,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type RetentionFilterOrderParameters struct {

	// (List of String) The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.
	// The filter IDs list. The order of filters IDs in this attribute defines the overall APM retention filters order.
	// +kubebuilder:validation:Optional
	FilterIds []*string `json:"filterIds,omitempty" tf:"filter_ids,omitempty"`
}

// RetentionFilterOrderSpec defines the desired state of RetentionFilterOrder
type RetentionFilterOrderSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RetentionFilterOrderParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RetentionFilterOrderInitParameters `json:"initProvider,omitempty"`
}

// RetentionFilterOrderStatus defines the observed state of RetentionFilterOrder.
type RetentionFilterOrderStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RetentionFilterOrderObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RetentionFilterOrder is the Schema for the RetentionFilterOrders API. Provides a Datadog APM Retention Filters API https://docs.datadoghq.com/api/v2/apm-retention-filters/ resource, which is used to manage Datadog APM retention filters order.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,datadog}
type RetentionFilterOrder struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.filterIds) || (has(self.initProvider) && has(self.initProvider.filterIds))",message="spec.forProvider.filterIds is a required parameter"
	Spec   RetentionFilterOrderSpec   `json:"spec"`
	Status RetentionFilterOrderStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RetentionFilterOrderList contains a list of RetentionFilterOrders
type RetentionFilterOrderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RetentionFilterOrder `json:"items"`
}

// Repository type metadata.
var (
	RetentionFilterOrder_Kind             = "RetentionFilterOrder"
	RetentionFilterOrder_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RetentionFilterOrder_Kind}.String()
	RetentionFilterOrder_KindAPIVersion   = RetentionFilterOrder_Kind + "." + CRDGroupVersion.String()
	RetentionFilterOrder_GroupVersionKind = CRDGroupVersion.WithKind(RetentionFilterOrder_Kind)
)

func init() {
	SchemeBuilder.Register(&RetentionFilterOrder{}, &RetentionFilterOrderList{})
}
