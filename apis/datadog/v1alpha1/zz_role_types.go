/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PermissionInitParameters struct {

	// (String) The ID of this resource.
	// ID of the permission to assign.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type PermissionObservation struct {

	// (String) The ID of this resource.
	// ID of the permission to assign.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of the role.
	// Name of the permission.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PermissionParameters struct {

	// (String) The ID of this resource.
	// ID of the permission to assign.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type RoleInitParameters struct {

	// (String) Name of the role.
	// Name of the role.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block Set) Set of objects containing the permission ID and the name of the permissions granted to this role. (see below for nested schema)
	// Set of objects containing the permission ID and the name of the permissions granted to this role.
	Permission []PermissionInitParameters `json:"permission,omitempty" tf:"permission,omitempty"`

	// (Boolean) If set to false, skip the validation call done during plan.
	// If set to `false`, skip the validation call done during plan.
	Validate *bool `json:"validate,omitempty" tf:"validate,omitempty"`
}

type RoleObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of the role.
	// Name of the role.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block Set) Set of objects containing the permission ID and the name of the permissions granted to this role. (see below for nested schema)
	// Set of objects containing the permission ID and the name of the permissions granted to this role.
	Permission []PermissionObservation `json:"permission,omitempty" tf:"permission,omitempty"`

	// (Number) Number of users that have this role.
	// Number of users that have this role.
	UserCount *float64 `json:"userCount,omitempty" tf:"user_count,omitempty"`

	// (Boolean) If set to false, skip the validation call done during plan.
	// If set to `false`, skip the validation call done during plan.
	Validate *bool `json:"validate,omitempty" tf:"validate,omitempty"`
}

type RoleParameters struct {

	// (String) Name of the role.
	// Name of the role.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block Set) Set of objects containing the permission ID and the name of the permissions granted to this role. (see below for nested schema)
	// Set of objects containing the permission ID and the name of the permissions granted to this role.
	// +kubebuilder:validation:Optional
	Permission []PermissionParameters `json:"permission,omitempty" tf:"permission,omitempty"`

	// (Boolean) If set to false, skip the validation call done during plan.
	// If set to `false`, skip the validation call done during plan.
	// +kubebuilder:validation:Optional
	Validate *bool `json:"validate,omitempty" tf:"validate,omitempty"`
}

// RoleSpec defines the desired state of Role
type RoleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RoleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RoleInitParameters `json:"initProvider,omitempty"`
}

// RoleStatus defines the observed state of Role.
type RoleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RoleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Role is the Schema for the Roles API. Provides a Datadog role resource. This can be used to create and manage Datadog roles.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,datadog}
type Role struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   RoleSpec   `json:"spec"`
	Status RoleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RoleList contains a list of Roles
type RoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Role `json:"items"`
}

// Repository type metadata.
var (
	Role_Kind             = "Role"
	Role_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Role_Kind}.String()
	Role_KindAPIVersion   = Role_Kind + "." + CRDGroupVersion.String()
	Role_GroupVersionKind = CRDGroupVersion.WithKind(Role_Kind)
)

func init() {
	SchemeBuilder.Register(&Role{}, &RoleList{})
}
