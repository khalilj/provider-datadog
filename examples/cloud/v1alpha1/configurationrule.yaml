apiVersion: cloud.datadog.upbound.io/v1alpha1
kind: ConfigurationRule
metadata:
  annotations:
    meta.upbound.io/example-id: cloud/v1alpha1/configurationrule
  labels:
    testing.upbound.io/example-name: myrule
  name: myrule
spec:
  forProvider:
    enabled: true
    groupBy:
    - '@resource'
    message: Rule has triggered
    name: My cloud configuration rule
    notifications:
    - '@channel'
    policy: |
      package datadog

      import data.datadog.output as dd_output

      import future.keywords.contains
      import future.keywords.if
      import future.keywords.in

      eval(resource) = "skip" if {
          # Logic that evaluates to true if the resource should be skipped
          true
      } else = "pass" {
          # Logic that evaluates to true if the resource is compliant
          true
      } else = "fail" {
          # Logic that evaluates to true if the resource is not compliant
          true
      }

      # This part remains unchanged for all rules
      results contains result if {
          some resource in input.resources[input.main_resource_type]
          result := dd_output.format(resource, eval(resource))
      }
    relatedResourceTypes: []
    resourceType: aws_s3_bucket
    severity: high
    tags:
    - some:tag
